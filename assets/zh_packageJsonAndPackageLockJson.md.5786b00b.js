import{_ as s,c as a,o as n,R as o}from"./chunks/framework.cfc4ba5e.js";const d=JSON.parse('{"title":"packageJsonAndPackageLockJson","description":"","frontmatter":{},"headers":[{"level":2,"title":"package.json","slug":"package-json","link":"#package-json","children":[{"level":3,"title":"管理包","slug":"管理包","link":"#管理包","children":[]},{"level":3,"title":"语义版本控制","slug":"语义版本控制","link":"#语义版本控制","children":[]},{"level":3,"title":"安装依赖包的版本如何指定","slug":"安装依赖包的版本如何指定","link":"#安装依赖包的版本如何指定","children":[]},{"level":3,"title":"多人开发时依赖包安装的问题","slug":"多人开发时依赖包安装的问题","link":"#多人开发时依赖包安装的问题","children":[]}]},{"level":2,"title":"package-lock.json","slug":"package-lock-json","link":"#package-lock-json","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"package-lock.json 生成逻辑","slug":"package-lock-json-生成逻辑","link":"#package-lock-json-生成逻辑","children":[]},{"level":3,"title":"package-lock.json 可能被意外更改的原因","slug":"package-lock-json-可能被意外更改的原因","link":"#package-lock-json-可能被意外更改的原因","children":[]},{"level":3,"title":"开发的建议","slug":"开发的建议","link":"#开发的建议","children":[]},{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}]}],"relativePath":"zh/packageJsonAndPackageLockJson.md","lastUpdated":1680248978000}'),l={name:"zh/packageJsonAndPackageLockJson.md"},p=o(`<h1 id="packagejsonandpackagelockjson" tabindex="-1">packageJsonAndPackageLockJson <a class="header-anchor" href="#packagejsonandpackagelockjson" aria-label="Permalink to &quot;packageJsonAndPackageLockJson&quot;">​</a></h1><p>模块化开发在前端越来越流行，使用 node 和 npm 可以很方便的下载管理项目所需的依赖模块。<code>package.json 用来描述项目及项目所依赖的模块信息。</code></p><h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h2><h3 id="管理包" tabindex="-1">管理包 <a class="header-anchor" href="#管理包" aria-label="Permalink to &quot;管理包&quot;">​</a></h3><p><code>package.json 用来描述项目及项目所依赖的模块信息。</code>就是帮我们管理项目中的依赖包的，让我们远离了依赖地狱。</p><h3 id="语义版本控制" tabindex="-1">语义版本控制 <a class="header-anchor" href="#语义版本控制" aria-label="Permalink to &quot;语义版本控制&quot;">​</a></h3><p>依赖包的<strong>版本号的定义</strong>：</p><p>版本号由三部分组成：<code>major.minor.patch</code>，主版本号.次版本号.修补版本号。</p><p>例如：1.2.3，主要版本 1，次要版本 2，补丁 3。</p><ul><li><code>补丁</code>中的更改表示不会破坏任何内容的错误修复。</li><li><code>次要版本</code>的更改表示不会破坏任何内容的新功能。</li><li><code>主要版本</code>的更改代表了一个破坏兼容性的大变化。如果用户不适应主要版本更改，则内容将无法正常工作。</li></ul><h3 id="安装依赖包的版本如何指定" tabindex="-1">安装依赖包的版本如何指定 <a class="header-anchor" href="#安装依赖包的版本如何指定" aria-label="Permalink to &quot;安装依赖包的版本如何指定&quot;">​</a></h3><p>安装一些依赖包的时候，版本号前面都会带 <code>^</code> 或者 <code>~</code> 的符号，这两个符号意思是：</p><p><code>~</code> 会匹配最近的小版本依赖包，比如 ~1.2.3 会匹配所有 1.2.x 版本，但是不包括 1.3.0</p><p><code>^</code> 会匹配最新的大版本依赖包，比如 ^1.2.3 会匹配所有 1.x.x 的包，包括 1.3.0，但是不包括 2.0.0</p><p><code>*</code> 安装最新版本的依赖包，比如 *1.2.3 会匹配 x.x.x，</p><p>那么该如何选择呢？当然你可以<code>指定特定的版本号</code>，直接写 1.2.3，前面<strong>什么前缀都没有</strong>，这样固然没问题，但是如果依赖包发布新版本修复了一些小 bug，那么需要手动修改 package.json 文件；<code>~</code> 和 <code>^</code> 则可以解决这个问题。</p><p>但是需要注意 ^ 版本更新可能比较大，会造成项目代码错误，所以 <strong>建议使用 <code>~</code> 来标记版本号</strong>，这样可以保证项目不会出现大的问题，也能保证包中的小 bug 可以得到修复。</p><p>版本号写 *，这意味着安装最新版本的依赖包，但缺点同上，可能会造成版本不兼容，<strong>慎用！</strong></p><h3 id="多人开发时依赖包安装的问题" tabindex="-1">多人开发时依赖包安装的问题 <a class="header-anchor" href="#多人开发时依赖包安装的问题" aria-label="Permalink to &quot;多人开发时依赖包安装的问题&quot;">​</a></h3><p>看了上面版本号的指定后，我们可以知道，当我们使用了 <code>^</code> 或者 <code>~</code> 来控制依赖包版本号的时候 ，多人开发，就有可能存在大家安装的依赖包版本不一样的情况，就会存在项目运行的结果不一样。</p><p><strong>我们举个例子：</strong></p><p>假设我们中安装了 <code>vue</code>, 当我们运行安装 <code>npm install vue -save</code> 的时候，在项目中的 package.json 的 vue 版本是 <code>vue: ^3.0.0</code>, 我们电脑安装的 vue 版本就是 3.0.0 版本，我们把项目代码提交后，过了一段时间，vue 发布了新版本 3.0.1，这时新来一个同事，从新 <code>git clone</code> 克隆项目，执行 <code>npm install</code>安装的时候，在他电脑的 vue 版本就是 3.0.1 了，因为^只是锁了主要版本，这样我们电脑中的 vue 版本就会不一样，<strong>从理论上讲（大家都遵循语义版本控制的话）</strong>，它们应该仍然是兼容的，但也许 bugfix 会影响我们正在使用的功能，而且当使用 vue 版本 3.0.0 和 3.0.1 运行时，我们的应用程序会产生不同的结果。</p><p>大家思考思考，这样的话，不同人电脑安装的依赖版项目，是不是都有可能不一样，就会导致每个人电脑运行的应用程序产生不同的结果。就会存在 bug 的隐患。</p><p>这时也许有同学想到，那么我们在<code>package.json</code>上面锁死依赖包的版本号不就可以了? 直接写 <code>vue: 3.0.0</code>锁死，这样大家安装 vue 的版本都是 3.0.0 版本了。</p><p>这个想法固然是不错的，但是你只能控制你自己的项目锁死版本号，那你项目中依赖包的依赖包呢？你怎么控制限制别人锁死版本号呢？</p><p>为了解决这个不同人电脑安装的所有依赖版本都是一致的，确保项目代码在安装所执行的运行结果都一样，这时 <code>package-lock.json</code> 就应运而生了。</p><h2 id="package-lock-json" tabindex="-1">package-lock.json <a class="header-anchor" href="#package-lock-json" aria-label="Permalink to &quot;package-lock.json&quot;">​</a></h2><p>package-lock.json 是在 npm(^5.x.x.x)后才有，中途有几次更改</p><h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><p><strong>官方文档</strong>是这样解释的：<code>package-lock.json</code> 它会<strong>在 npm 更改 node_modules 目录树 或者 package.json 时自动生成的</strong> ，它准确的描述了当前项目 npm 包的依赖树，并且在随后的安装中会根据 package-lock.json 来安装，保证是相同的一个依赖树，不考虑这个过程中是否有某个依赖有小版本的更新。</p><p>它的产生就是来对整个依赖树进行版本固定的（锁死）。</p><p>当我们在一个项目中<code>npm install</code>时候，会自动生成一个<code>package-lock.json</code>文件，和<code>package.json</code>在同一级目录下。<code>package-lock.json</code>记录了项目的一些信息和所依赖的模块。这样在每次安装都会出现相同的结果. 不管你在什么机器上面或什么时候安装。</p><p>当我们下次再<code>npm install</code>时候，npm 发现如果项目中有 <code>package-lock.json</code> 文件，会根据 <code>package-lock.json</code> 里的内容来处理和安装依赖而不再根据 <code>package.json</code>。</p><blockquote><p>注意，使用<code>cnpm install</code>时候，并不会生成 <code>package-lock.json</code> 文件，也不会根据 <code>package-lock.json</code> 来安装依赖包，还是会使用 <code>package.json</code> 来安装。</p></blockquote><h3 id="package-lock-json-生成逻辑" tabindex="-1">package-lock.json 生成逻辑 <a class="header-anchor" href="#package-lock-json-生成逻辑" aria-label="Permalink to &quot;package-lock.json 生成逻辑&quot;">​</a></h3><p>简单描述一下 <code>package-lock.json</code> 生成的逻辑。假设我们现在有三个 package，在项目 lock-test 中，安装依赖 A，A 项目面有 B，B 项目面有 C</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// package lock-test</span></span>
<span class="line"><span style="color:#F6F6F4;">{ </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">lock-test</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> { </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> }}</span></span>
<span class="line"><span style="color:#7B7F8B;">// package A</span></span>
<span class="line"><span style="color:#F6F6F4;">{ </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">A</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> { </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> }}</span></span>
<span class="line"><span style="color:#7B7F8B;">// package B</span></span>
<span class="line"><span style="color:#F6F6F4;">{ </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">B</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> { </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">C</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> }}</span></span>
<span class="line"><span style="color:#7B7F8B;">// package C</span></span>
<span class="line"><span style="color:#F6F6F4;">{ </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">C</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在这种情况下 <code>package-lock.json</code>, 会生成类似下面铺平的结构</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// package-lock.json</span></span>
<span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">lock-test</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">C</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>如果后续无论是直接依赖的 A 发版，或者间接依赖的 B, C 发版，只要我们不动 <code>package.json</code>, <code>package-lock.json</code> 都不会重新生成。</p><p>A 发布了新版本 1.1.0，虽然我们 package.json 写的是 ^1.0.0 但是因为 <code>package-lock.json</code>的存在，npm i 并不会自动升级，</p><p>我们可以手动运行 npm i A@1.1.0来实现升级。</p><p>因为 1.1.0 <code>package-lock.json</code> 里记录的 A@1.0.0是不一致的，因此会更新 <code>package-lock.json</code> 里的 A 的版本为 1.1.0。</p><p>B 发布了新版本 1.0.1, 1.0.2, 1.1.0, 此刻如果我们不做操作是不会自动升级 B 的版本的，但如果此刻 A 发布了 1.1.1，虽然并没有升级 B 的依赖，但是如果我们项目里升级 A@1.1.1，此时 <code>package-lock.json</code> 里会把 B 直接升到 1.1.0 ,因为此刻^1.0.0 的最新版本就是 1.1.0。</p><p>经过这些操作后 项目 lock-test 的 package.json 变成</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// package</span></span>
<span class="line"><span style="color:#F6F6F4;">lock-test{ </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> { </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>对应的 <code>package-lock.json</code> 文件</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">lock-test</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">C</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这个时候我们将 B 加入我们 lock-test 项目的依赖, B@^1.0.0，package.json 如下</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F6F6F4;">{</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>我们执行这个操作后，<code>package-lock.json</code> 并没有被改变，因为现在 <code>package-lock.json</code>里 B@1.1.0 满足 ^1.0.0 的要求</p><p>但是如果我们将 B 的版本固定到 2.x 版本, <code>package-lock.json</code> 就会发生改变</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F6F6F4;">{</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^2.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>因为存在了两个冲突的 B 版本，<code>package-lock.json</code> 文件会变成如下形式</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">name</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">lock-test</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">A</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">dependencies</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">B</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">C</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">version</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>因为 B 的版本出现了冲突，npm 使用嵌套描述了这种行为</p><p>我们实际开发中并不需要关注这种生成的算法逻辑，我们只需要了解，<code>package-lock.json</code>的生成逻辑是为了能够精准的反映出我们 node_modules 的结构，并保证能够这种结构被还原。</p><h3 id="package-lock-json-可能被意外更改的原因" tabindex="-1">package-lock.json 可能被意外更改的原因 <a class="header-anchor" href="#package-lock-json-可能被意外更改的原因" aria-label="Permalink to &quot;package-lock.json 可能被意外更改的原因&quot;">​</a></h3><ol><li>package.json 文件修改了</li><li>挪动了包的位置将部分包的位置从 dependencies 移动到 devDependencies 这种操作，虽然包未变，但是也会影响 <code>package-lock.json</code>，会将部分包的 dev 字段设置为 true</li><li>registry 的影响</li></ol><p>经过实际使用发现，如果我们 node_modules 文件夹下的包中下载时，就算版本一样，安装源 <code>registry</code> 不同，执行 npm i 时也会修改 package-lock.json</p><p>可能还存在其他的原因，但是 <code>package-lock.json</code> 是不会无缘无故被更改的，一定是因为 <strong>package.json 或者 node_modules 被更改了</strong>，因为 正如上面提到的 package-lock.json 为了能够精准的反映出我们 node_modules 的结构</p><h3 id="开发的建议" tabindex="-1">开发的建议 <a class="header-anchor" href="#开发的建议" aria-label="Permalink to &quot;开发的建议&quot;">​</a></h3><p>一般情况下 <code>npm install</code> 是可以的，他能保证根据 <code>package-lock.json</code> 还原出开发时的 <code>node_modules</code>。</p><p>但是为了防止出现刚刚提到的意外情况，除非涉及到对包的调整，其他情况下建议使用 <code>npm ci</code>来安装依赖，会避免异常的修改 <code>package-lock.json</code>，</p><p>持续集成工具中更推荐是用 <code>npm ci</code>，保证<code>构建环境的准确性</code>，<strong>npm i 和 npm ci 的区别</strong> 可以参考<strong>官方文档 npm-ci</strong>[2]</p><h3 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h3><p>[1] 官方文档: <em><a href="https://docs.npmjs.com/cli/v8/configuring-npm/package-lock-json" target="_blank" rel="noreferrer">https://docs.npmjs.com/cli/v8/configuring-npm/package-lock-json</a></em></p><p>[2] 官方文档 npm-ci: <em><a href="https://docs.npmjs.com/cli/v8/commands/npm-ci" target="_blank" rel="noreferrer">https://docs.npmjs.com/cli/v8/commands/npm-ci</a></em></p><p>[3] 我的 package-lock.json 被谁改了？: <em><a href="https://cloud.tencent.com/developer/article/1819632" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/1819632</a></em></p><p>[4] npm install 生成的 package-lock.json 是什么文件？有什么用？: <em><a href="https://www.zhihu.com/question/62331583/answer/275248129" target="_blank" rel="noreferrer">https://www.zhihu.com/question/62331583/answer/275248129</a></em></p>`,70),e=[p];function c(t,r,F,y,E,i){return n(),a("div",null,e)}const k=s(l,[["render",c]]);export{d as __pageData,k as default};
