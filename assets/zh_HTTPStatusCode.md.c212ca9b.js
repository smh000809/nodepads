import{_ as t,c as e,o as n,R as d}from"./chunks/framework.cfc4ba5e.js";const T=JSON.parse('{"title":"HTTPStatusCode","description":"","frontmatter":{},"headers":[{"level":2,"title":"HTTP 状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP 状态码共分为 5 种类型","slug":"http-状态码由三个十进制数字组成-第一个十进制数字定义了状态码的类型-后两个数字没有分类的作用。http-状态码共分为-5-种类型","link":"#http-状态码由三个十进制数字组成-第一个十进制数字定义了状态码的类型-后两个数字没有分类的作用。http-状态码共分为-5-种类型","children":[]},{"level":2,"title":"HTTP 状态码列表","slug":"http-状态码列表","link":"#http-状态码列表","children":[]}],"relativePath":"zh/HTTPStatusCode.md","lastUpdated":1680248978000}'),l={name:"zh/HTTPStatusCode.md"},r=d('<h1 id="httpstatuscode" tabindex="-1">HTTPStatusCode <a class="header-anchor" href="#httpstatuscode" aria-label="Permalink to &quot;HTTPStatusCode&quot;">​</a></h1><h2 id="http-状态码由三个十进制数字组成-第一个十进制数字定义了状态码的类型-后两个数字没有分类的作用。http-状态码共分为-5-种类型" tabindex="-1">HTTP 状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP 状态码共分为 5 种类型 <a class="header-anchor" href="#http-状态码由三个十进制数字组成-第一个十进制数字定义了状态码的类型-后两个数字没有分类的作用。http-状态码共分为-5-种类型" aria-label="Permalink to &quot;HTTP 状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP 状态码共分为 5 种类型&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">分类</th><th style="text-align:center;">分类描述</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">成功，操作被成功接收并处理</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">重定向，需要进一步的操作以完成请求</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><h2 id="http-状态码列表" tabindex="-1">HTTP 状态码列表 <a class="header-anchor" href="#http-状态码列表" aria-label="Permalink to &quot;HTTP 状态码列表&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">状态码英文名称</th><th style="text-align:center;">中文描述</th></tr></thead><tbody><tr><td style="text-align:center;">100</td><td style="text-align:center;">Continue</td><td style="text-align:center;">继续。客户端应继续其请求</td></tr><tr><td style="text-align:center;">101</td><td style="text-align:center;">Switching Protocols</td><td style="text-align:center;">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到 HTTP 的新版本协议</td></tr><tr><td style="text-align:center;">200</td><td style="text-align:center;">OK</td><td style="text-align:center;">请求成功。一般用于 GET 与 POST 请求</td></tr><tr><td style="text-align:center;">201</td><td style="text-align:center;">Created</td><td style="text-align:center;">已创建。成功请求并创建了新的资源</td></tr><tr><td style="text-align:center;">202</td><td style="text-align:center;">Accepted</td><td style="text-align:center;">已接受。已经接受请求，但未处理完成</td></tr><tr><td style="text-align:center;">203</td><td style="text-align:center;">Non-Authoritative Information</td><td style="text-align:center;">非授权信息。请求成功。但返回的 meta 信息不在原始的服务器，而是一个副本</td></tr><tr><td style="text-align:center;">204</td><td style="text-align:center;">No Content</td><td style="text-align:center;">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td style="text-align:center;">205</td><td style="text-align:center;">Reset Content</td><td style="text-align:center;">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td style="text-align:center;">206</td><td style="text-align:center;">Partial Content</td><td style="text-align:center;">部分内容。服务器成功处理了部分 GET 请求</td></tr><tr><td style="text-align:center;">300</td><td style="text-align:center;">Multiple Choices</td><td style="text-align:center;">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td style="text-align:center;">301</td><td style="text-align:center;">Moved Permanently</td><td style="text-align:center;">永久移动。请求的资源已被永久的移动到新 URI，返回信息会包括新的 URI，浏览器会自动定向到新 URI。今后任何新的请求都应使用新的 URI 代替</td></tr><tr><td style="text-align:center;">302</td><td style="text-align:center;">Found</td><td style="text-align:center;">临时移动。与 301 类似。但资源只是临时被移动。客户端应继续使用原有 URI</td></tr><tr><td style="text-align:center;">303</td><td style="text-align:center;">See Other</td><td style="text-align:center;">查看其它地址。与 301 类似。使用 GET 和 POST 请求查看</td></tr><tr><td style="text-align:center;">304</td><td style="text-align:center;">Not Modified</td><td style="text-align:center;">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td style="text-align:center;">305</td><td style="text-align:center;">Use Proxy</td><td style="text-align:center;">使用代理。所请求的资源必须通过代理访问</td></tr><tr><td style="text-align:center;">306</td><td style="text-align:center;">Unused</td><td style="text-align:center;">已经被废弃的 HTTP 状态码</td></tr><tr><td style="text-align:center;">307</td><td style="text-align:center;">Temporary Redirect</td><td style="text-align:center;">临时重定向。与 302 类似。使用 GET 请求重定向</td></tr><tr><td style="text-align:center;">400</td><td style="text-align:center;">Bad Request</td><td style="text-align:center;">客户端请求的语法错误，服务器无法理解</td></tr><tr><td style="text-align:center;">401</td><td style="text-align:center;">Unauthorized</td><td style="text-align:center;">请求要求用户的身份认证</td></tr><tr><td style="text-align:center;">402</td><td style="text-align:center;">Payment Required</td><td style="text-align:center;">保留，将来使用</td></tr><tr><td style="text-align:center;">403</td><td style="text-align:center;">Forbidden</td><td style="text-align:center;">服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td style="text-align:center;">404</td><td style="text-align:center;">Not Found</td><td style="text-align:center;">服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置&quot;您所请求的资源无法找到&quot;的个性页面</td></tr><tr><td style="text-align:center;">405</td><td style="text-align:center;">Method Not Allowed</td><td style="text-align:center;">客户端请求中的方法被禁止</td></tr><tr><td style="text-align:center;">406</td><td style="text-align:center;">Not Acceptable</td><td style="text-align:center;">服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td style="text-align:center;">407</td><td style="text-align:center;">Proxy Authentication Required</td><td style="text-align:center;">请求要求代理的身份认证，与 401 类似，但请求者应当使用代理进行授权</td></tr><tr><td style="text-align:center;">408</td><td style="text-align:center;">Request Time-out</td><td style="text-align:center;">服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td style="text-align:center;">409</td><td style="text-align:center;">Conflict</td><td style="text-align:center;">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td style="text-align:center;">410</td><td style="text-align:center;">Gone</td><td style="text-align:center;">客户端请求的资源已经不存在。410 不同于 404，如果资源以前有现在被永久删除了可使用 410 代码，网站设计人员可通过 301 代码指定资源的新位置</td></tr><tr><td style="text-align:center;">411</td><td style="text-align:center;">Length Required</td><td style="text-align:center;">服务器无法处理客户端发送的不带 Content-Length 的请求信息</td></tr><tr><td style="text-align:center;">412</td><td style="text-align:center;">Precondition Failed</td><td style="text-align:center;">客户端请求信息的先决条件错误</td></tr><tr><td style="text-align:center;">413</td><td style="text-align:center;">Request Entity Too Large</td><td style="text-align:center;">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个 Retry-After 的响应信息</td></tr><tr><td style="text-align:center;">414</td><td style="text-align:center;">Request-URI Too Large</td><td style="text-align:center;">请求的 URI 过长（URI 通常为网址），服务器无法处理</td></tr><tr><td style="text-align:center;">415</td><td style="text-align:center;">Unsupported Media Type</td><td style="text-align:center;">服务器无法处理请求附带的媒体格式</td></tr><tr><td style="text-align:center;">416</td><td style="text-align:center;">Requested range not satisfiable</td><td style="text-align:center;">客户端请求的范围无效</td></tr><tr><td style="text-align:center;">417</td><td style="text-align:center;">Expectation Failed</td><td style="text-align:center;">服务器无法满足 Expect 的请求头信息</td></tr><tr><td style="text-align:center;">500</td><td style="text-align:center;">Internal Server Error</td><td style="text-align:center;">服务器内部错误，无法完成请求</td></tr><tr><td style="text-align:center;">501</td><td style="text-align:center;">Not Implemented</td><td style="text-align:center;">服务器不支持请求的功能，无法完成请求</td></tr><tr><td style="text-align:center;">502</td><td style="text-align:center;">Bad Gateway</td><td style="text-align:center;">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td style="text-align:center;">503</td><td style="text-align:center;">Service Unavailable</td><td style="text-align:center;">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的 Retry-After 头信息中</td></tr><tr><td style="text-align:center;">504</td><td style="text-align:center;">Gateway Time-out</td><td style="text-align:center;">充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td style="text-align:center;">505</td><td style="text-align:center;">HTTP Version not supported</td><td style="text-align:center;">服务器不支持请求的 HTTP 协议的版本，无法完成处理</td></tr></tbody></table>',5),a=[r];function i(s,c,y,x,g,o){return n(),e("div",null,a)}const u=t(l,[["render",i]]);export{T as __pageData,u as default};
