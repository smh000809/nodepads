import{_ as s,c as n,o as a,R as l}from"./chunks/framework.cfc4ba5e.js";const E=JSON.parse('{"title":"sortablejs","description":"","frontmatter":{},"headers":[],"relativePath":"zh/SortableJS.md","lastUpdated":1682301132000}'),p={name:"zh/SortableJS.md"},e=l(`<h1 id="sortablejs" tabindex="-1">sortablejs <a class="header-anchor" href="#sortablejs" aria-label="Permalink to &quot;sortablejs&quot;">​</a></h1><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> sortable </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Sortable</span><span style="color:#F6F6F4;">(el, {</span></span>
<span class="line"><span style="color:#F6F6F4;">    group</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// or { name: &quot;...&quot;, pull: [true, false, &#39;clone&#39;, array], put: [true, false, array] }</span></span>
<span class="line"><span style="color:#F6F6F4;">    sort</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// boolean 定义是否列表单元是否可以在列表容器内进行拖拽排序</span></span>
<span class="line"><span style="color:#F6F6F4;">    delay</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// number 定义鼠标选中列表单元可以开始拖动的延迟时间；</span></span>
<span class="line"><span style="color:#F6F6F4;">    touchStartThreshold</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// px, how many pixels the point should move before cancelling a delayed drag event</span></span>
<span class="line"><span style="color:#F6F6F4;">    disabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// boolean 定义是否此sortable对象是否可用，为true时sortable对象不能拖放排序等功能，为false时为可以进行排序，相当于一个开关；</span></span>
<span class="line"><span style="color:#F6F6F4;">    store</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// @see Store</span></span>
<span class="line"><span style="color:#F6F6F4;">    animation</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">150</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// ms, number 单位：ms，定义排序动画的时间</span></span>
<span class="line"><span style="color:#F6F6F4;">    easing</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">cubic-bezier(1, 0, 0, 1)</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// Easing for animation. Defaults to null. See https://easings.net/ for examples.</span></span>
<span class="line"><span style="color:#F6F6F4;">    handle</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.my-handle</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 格式为简单css选择器的字符串，使列表单元中符合选择器的元素成为拖动的手柄，只有按住拖动手柄才能使列表单元进行拖动</span></span>
<span class="line"><span style="color:#F6F6F4;">    filter</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ignore-elements</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 过滤器，不需要进行拖动的元素</span></span>
<span class="line"><span style="color:#F6F6F4;">    preventOnFilter</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">//  在触发过滤器\`filter\`的时候调用\`event.preventDefault()\`</span></span>
<span class="line"><span style="color:#F6F6F4;">    draggable</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.item</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 允许拖拽的项目类名</span></span>
<span class="line"><span style="color:#F6F6F4;">    ghostClass</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sortable-ghost</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// drop placeholder的css类名</span></span>
<span class="line"><span style="color:#F6F6F4;">    chosenClass</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sortable-chosen</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 被选中项的css 类名</span></span>
<span class="line"><span style="color:#F6F6F4;">    dragClass</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sortable-drag</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 正在被拖拽中的css类名</span></span>
<span class="line"><span style="color:#F6F6F4;">    dataIdAttr</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">data-id</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    swapThreshold</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// Threshold of the swap zone</span></span>
<span class="line"><span style="color:#F6F6F4;">    invertSwap</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// Will always use inverted swap zone if set to true</span></span>
<span class="line"><span style="color:#F6F6F4;">    invertedSwapThreshold</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// Threshold of the inverted swap zone (will be set to swapThreshold value by default)</span></span>
<span class="line"><span style="color:#F6F6F4;">    direction</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">horizontal</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 拖拽方向 (默认情况下会自动判断方向)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    forceFallback</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 忽略 HTML5拖拽行为，强制回调进行</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    fallbackClass</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sortable-fallback</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 当使用forceFallback的时候，被复制的dom的css类名</span></span>
<span class="line"><span style="color:#F6F6F4;">    fallbackOnBody</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 将cloned DOM 元素挂到body元素上。</span></span>
<span class="line"><span style="color:#F6F6F4;">    fallbackTolerance</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// Specify in pixels how far the mouse should move before it&#39;s considered as a drag.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    scroll</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// or HTMLElement</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">scrollFn</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">offsetX</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">offsetY</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">originalEvent</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">touchEvt</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">hoverTargetEl</span><span style="color:#F6F6F4;">) { </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;"> }, </span><span style="color:#7B7F8B;">// if you have custom scrollbar scrollFn may be used for autoscrolling</span></span>
<span class="line"><span style="color:#F6F6F4;">    scrollSensitivity</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">30</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// px, how near the mouse must be to an edge to start scrolling.</span></span>
<span class="line"><span style="color:#F6F6F4;">    scrollSpeed</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// px</span></span>
<span class="line"><span style="color:#F6F6F4;">    bubbleScroll</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// apply autoscroll to all parent elements, allowing for easier movement</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    dragoverBubble</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    removeCloneOnHide</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// Remove the clone element when it is not showing, rather than just hiding it</span></span>
<span class="line"><span style="color:#F6F6F4;">    emptyInsertThreshold</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// px, distance mouse must be from empty sortable to insert drag element into it</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">setData</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/** DataTransfer */</span><span style="color:#FFB86C;font-style:italic;">dataTransfer</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">/** HTMLElement*/</span><span style="color:#FFB86C;font-style:italic;">dragEl</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        dataTransfer.</span><span style="color:#62E884;">setData</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Text</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, dragEl.textContent); </span><span style="color:#7B7F8B;">// \`dataTransfer\` object of HTML5 DragEvent</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 元素被选中</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onChoose</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.oldIndex;  </span><span style="color:#7B7F8B;">// element index within parent</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 元素未被选中的时候（从选中到未选中）</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onUnchoose</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// same properties as onEnd</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 开始拖拽的时候</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onStart</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.oldIndex;  </span><span style="color:#7B7F8B;">// element index within parent</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 结束拖拽</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onEnd</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> itemEl </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> evt.item;  </span><span style="color:#7B7F8B;">// dragged HTMLElement</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.to;    </span><span style="color:#7B7F8B;">// target list</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.from;  </span><span style="color:#7B7F8B;">// previous list</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.oldIndex;  </span><span style="color:#7B7F8B;">// element&#39;s old index within old parent</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.newIndex;  </span><span style="color:#7B7F8B;">// element&#39;s new index within new parent</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.clone </span><span style="color:#7B7F8B;">// the clone element</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.pullMode;  </span><span style="color:#7B7F8B;">// when item is in another sortable: \`&quot;clone&quot;\` if cloning, \`true\` if moving</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 元素从一个列表拖拽到另一个列表</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onAdd</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// same properties as onEnd</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 列表内元素顺序更新的时候触发</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onUpdate</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// same properties as onEnd</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 列表的任何更改都会触发</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onSort</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// same properties as onEnd</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 元素从列表中移除进入另一个列表</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onRemove</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// same properties as onEnd</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 试图拖拽一个filtered的元素</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onFilter</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> itemEl </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> evt.item;  </span><span style="color:#7B7F8B;">// HTMLElement receiving the \`mousedown|tapstart\` event.</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 拖拽移动的时候</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onMove</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">originalEvent</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// Example: https://jsbin.com/nawahef/edit?js,output</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.dragged; </span><span style="color:#7B7F8B;">// dragged HTMLElement</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.draggedRect; </span><span style="color:#7B7F8B;">// DOMRect {left, top, right, bottom}</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.related; </span><span style="color:#7B7F8B;">// HTMLElement on which have guided</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.relatedRect; </span><span style="color:#7B7F8B;">// DOMRect</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.willInsertAfter; </span><span style="color:#7B7F8B;">// Boolean that is true if Sortable will insert drag element after target by default</span></span>
<span class="line"><span style="color:#F6F6F4;">        originalEvent.clientY; </span><span style="color:#7B7F8B;">// mouse position</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// return false; — for cancel</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// return -1; — insert before target</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// return 1; — insert after target</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// clone一个元素的时候触发</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onClone</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> origEl </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> evt.item;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> cloneEl </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> evt.clone;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 拖拽元素改变位置的时候</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onChange</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#7B7F8B;">/**Event*/</span><span style="color:#FFB86C;font-style:italic;">evt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        evt.newIndex </span><span style="color:#7B7F8B;">// most likely why this event is used is to get the dragging element&#39;s current index</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// same properties as onEnd</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br></div></div><ul><li>group：string or object</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F6F6F4;">string：命名，个人建议用元素id就行,用处是为了设置可以拖放容器时使用，在array中的put的设置中再做介绍；</span></span>
<span class="line"><span style="color:#F6F6F4;">object：{name,pull,put}</span></span>
<span class="line"><span style="color:#F6F6F4;">        name：同string的方法，</span></span>
<span class="line"><span style="color:#F6F6F4;">        pull：pull用来定义从这个列表容器移动出去的设置，</span><span style="color:#BF9EEE;">true</span><span style="color:#F286C4;">/</span><span style="color:#BF9EEE;">false</span><span style="color:#F286C4;">/</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">clone</span><span style="color:#DEE492;">&#39;</span><span style="color:#F286C4;">/function</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#62E884;">true</span><span style="color:#F6F6F4;">:</span><span style="color:#62E884;">列表容器内的列表单元可以被移出</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#62E884;">false</span><span style="color:#F6F6F4;">：</span><span style="color:#62E884;">列表容器内的列表单元不可以被移出</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">            &#39;</span><span style="color:#62E884;">clone</span><span style="color:#F6F6F4;">&#39;：</span><span style="color:#62E884;">列表单元移出</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">移动的为该元素的副本</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">：</span><span style="color:#62E884;">用来进行pull的函数判断</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">可以进行复杂逻辑</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">在函数中return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">false</span><span style="color:#F6F6F4;">/</span><span style="color:#62E884;">true来判断是否移出</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">put</span><span style="color:#F6F6F4;">：</span><span style="color:#62E884;">put用来定义往这个列表容器放置列表单元的的设置</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">true</span><span style="color:#F6F6F4;">/</span><span style="color:#62E884;">false</span><span style="color:#F6F6F4;">/[&#39;</span><span style="color:#62E884;">foo</span><span style="color:#F6F6F4;">&#39;,&#39;</span><span style="color:#62E884;">bar</span><span style="color:#F6F6F4;">&#39;]/</span><span style="color:#62E884;">function</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#62E884;">true</span><span style="color:#F6F6F4;">:</span><span style="color:#62E884;">列表容器可以从其他列表容器内放入列表单元</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#62E884;">false</span><span style="color:#F6F6F4;">：</span><span style="color:#62E884;">与true相反</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">            [&#39;</span><span style="color:#62E884;">foo</span><span style="color:#F6F6F4;">&#39;,&#39;</span><span style="color:#62E884;">bar</span><span style="color:#F6F6F4;">&#39;]：</span><span style="color:#62E884;">这个可以是一个字符串或者是字符串的数组</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">代表的是group配置项里定义的name值</span><span style="color:#F6F6F4;">；</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">：</span><span style="color:#62E884;">用来进行put的函数判断</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">可以进行复杂逻辑</span><span style="color:#F6F6F4;">，</span><span style="color:#62E884;">在函数中return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">false</span><span style="color:#F6F6F4;">/</span><span style="color:#62E884;">true来判断是否放入</span><span style="color:#F6F6F4;">；</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>sort：boolean 定义是否列表单元是否可以在列表容器内进行拖拽排序；</li><li>delay：number 定义鼠标选中列表单元可以开始拖动的延迟时间；</li><li>disabled：boolean 定义是否此sortable对象是否可用，为true时sortable对象不能拖放排序等功能，为false时为可以进行排序，相当于一个开关；</li><li>animation：number 单位：ms，定义排序动画的时间；</li><li>handle：selector 格式为简单css选择器的字符串，使列表单元中符合选择器的元素成为拖动的手柄，只有按住拖动手柄才能使列表单元进行拖动；</li><li>filter：selector 格式为简单css选择器的字符串，定义哪些列表单元不能进行拖放，可设置为多个选择器，中间用“，”分隔；</li><li>draggable：selector 格式为简单css选择器的字符串，定义哪些列表单元可以进行拖放</li><li>ghostClass：selector 格式为简单css选择器的字符串，当拖动列表单元时会生成一个副本作为影子单元来模拟被拖动单元排序的情况，此配置项就是来给这个影子单元添加一个class，我们可以通过这种方式来给影子元素进行编辑样式；</li><li>chosenClass：selector 格式为简单css选择器的字符串，当选中列表单元时会给该单元增加一个class；</li><li>forceFallback：boolean 如果设置为true时，将不使用原生的html5的拖放，可以修改一些拖放中元素的样式等；</li><li>fallbackClass：string 当forceFallback设置为true时，拖放过程中鼠标附着单元的样式；</li><li>scroll：boolean 默认为true，当排序的容器是个可滚动的区域，拖放可以引起区域滚动</li></ul>`,5),o=[e];function r(F,t,c,y,i,b){return a(),n("div",null,o)}const m=s(p,[["render",r]]);export{E as __pageData,m as default};
