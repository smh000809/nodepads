import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.560b7abf.js";const b=JSON.parse('{"title":"IndexedDB","description":"","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"IndexedDB 简介","slug":"indexeddb-简介","link":"#indexeddb-简介","children":[]},{"level":2,"title":"IndexedDB 的使用","slug":"indexeddb-的使用","link":"#indexeddb-的使用","children":[]},{"level":2,"title":"IndexedDB 的浏览器支持","slug":"indexeddb-的浏览器支持","link":"#indexeddb-的浏览器支持","children":[]},{"level":2,"title":"创建 IndexedDB","slug":"创建-indexeddb","link":"#创建-indexeddb","children":[]},{"level":2,"title":"indexdb 中的 CURD","slug":"indexdb-中的-curd","link":"#indexdb-中的-curd","children":[]},{"level":2,"title":"使用游标 cursor","slug":"使用游标-cursor","link":"#使用游标-cursor","children":[]}],"relativePath":"zh/IndexedDB.md","lastUpdated":1680248978000}'),p={name:"zh/IndexedDB.md"},e=l(`<h1 id="indexeddb" tabindex="-1">IndexedDB <a class="header-anchor" href="#indexeddb" aria-label="Permalink to &quot;IndexedDB&quot;">​</a></h1><p><a href="http://www.flydean.com/indexeddb-kickoff/#%E7%AE%80%E4%BB%8B" target="_blank" rel="noreferrer">简介</a><a href="http://www.flydean.com/indexeddb-kickoff/#IndexedDB%E7%AE%80%E4%BB%8B" target="_blank" rel="noreferrer">IndexedDB 简介</a><a href="http://www.flydean.com/indexeddb-kickoff/#IndexedDB%E7%9A%84%E4%BD%BF%E7%94%A8" target="_blank" rel="noreferrer">IndexedDB 的使用</a></p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>IndexedDB 是一种在浏览器端存储数据的方式。既然称之为 DB，是因为它丰富了客户端的查询方式，并且因为是本地存储，可以有效的减少网络对页面数据的影响。</p><p>有了 IndexedDB，浏览器可以存储更多的数据，从而丰富了浏览器端的应用类型。</p><h2 id="indexeddb-简介" tabindex="-1">IndexedDB 简介 <a class="header-anchor" href="#indexeddb-简介" aria-label="Permalink to &quot;IndexedDB 简介&quot;">​</a></h2><p>IndexedDB 和传统的关系型数据不同的是，它是一个 key-value 型的数据库。</p><p>value 可以是复杂的结构体对象，key 可以是对象的某些属性值也可以是其他的对象（包括二进制对象）。你可以使用对象中的任何属性做为 index，以加快查找。</p><p>IndexedDB 是自带 transaction 的，所有的数据库操作都会绑定到特定的事务上，并且这些事务是自动提交了，IndexedDB 并不支持手动提交事务。</p><p>IndexedDB API 大部分都是异步的，在使用异步方法的时候，API 不会立马返回要查询的数据，而是返回一个 callback。</p><p>异步 API 的本质是向数据库发送一个操作请求，当操作完成的时候，会收到一个 DOM event，通过该 event，我们会知道操作是否成功，并且获得操作的结果。</p><p>IndexedDB 是一种 NoSQL 数据库，和关系型数据库不同的是，IndexedDB 是面向对象的，它存储的是 Javascript 对象。</p><p>IndexedDB 还有一个很重要的特点是其同源策略，每个源都会关联到不同的数据库集合，不同源是不允许访问其他源的数据库，从而保证了 IndexedDB 的安全性。</p><h2 id="indexeddb-的使用" tabindex="-1">IndexedDB 的使用 <a class="header-anchor" href="#indexeddb-的使用" aria-label="Permalink to &quot;IndexedDB 的使用&quot;">​</a></h2><p>这一节，我们将会以具体的例子来讲解如何使用 IndexedDB。</p><h2 id="indexeddb-的浏览器支持" tabindex="-1">IndexedDB 的浏览器支持 <a class="header-anchor" href="#indexeddb-的浏览器支持" aria-label="Permalink to &quot;IndexedDB 的浏览器支持&quot;">​</a></h2><p>不同的浏览器对于 IndexedDB 有不同的实现，正常来说，我们可以使用 window.indexedDB 来获取到浏览器的 indexedDB 对象。但是对于某些浏览器来说，还没有使用标准的 window.indexedDB，而是用带前缀的实现。</p><p>所以我们在使用过程中通常需要进行判断和转换：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// In the following line, you should include the prefixes of implementations you want to test.</span></span>
<span class="line"><span style="color:#F6F6F4;">window.indexedDB </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> window.indexedDB </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.mozIndexedDB </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.webkitIndexedDB </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.msIndexedDB;</span></span>
<span class="line"><span style="color:#7B7F8B;">// DON&#39;T use &quot;var indexedDB = ...&quot; if you&#39;re not in a function.</span></span>
<span class="line"><span style="color:#7B7F8B;">// Moreover, you may need references to some window.IDB* objects:</span></span>
<span class="line"><span style="color:#F6F6F4;">window.IDBTransaction </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> window.IDBTransaction </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.webkitIDBTransaction </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.msIDBTransaction </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> {READ_WRITE</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">readwrite</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">}; </span><span style="color:#7B7F8B;">// This line should only be needed if it is needed to support the object&#39;s constants for older browsers</span></span>
<span class="line"><span style="color:#F6F6F4;">window.IDBKeyRange </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> window.IDBKeyRange </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.webkitIDBKeyRange </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> window.msIDBKeyRange;</span></span>
<span class="line"><span style="color:#7B7F8B;">// (Mozilla has never prefixed these objects, so we don&#39;t need window.mozIDB*)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>上面我们从 window 获取了 indexedDB，IDBTransaction 和 IDBKeyRange 三个对象。</p><p>其中 indexedDB 表示的是数据库的连接。IDBTransaction 表示的是 transaction，而 IDBKeyRange 则是用从数据库的某个特定 key range 中取出数据。</p><p>但是，通常来说带前缀的实现一般都是不稳定的，所以我们通常不建议在正式环境中使用，所以如果不支持标准表达式的话，需要直接报错：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">window.indexedDB) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Your browser doesn&#39;t support a stable version of IndexedDB. Such and such feature will not be available.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="创建-indexeddb" tabindex="-1">创建 IndexedDB <a class="header-anchor" href="#创建-indexeddb" aria-label="Permalink to &quot;创建 IndexedDB&quot;">​</a></h2><p>要使用 IndexedDB，我们首先需要 open it：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// Let us open our database</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> window.indexedDB.</span><span style="color:#62E884;">open</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">MyTestDatabase</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>open 方法返回一个 IDBOpenDBRequest 对象，同时这是一个异步操作，open 操作并不会立马打开数据库或者开启事务，我们可以通过监听 request 的事件来进行相应的处理。</p><p>open 方法传入两个参数，第一个参数是数据库的名字，第二个参数是数据库的版本号。</p><p>当你创建一个新的数据库或者升级一个现有的数据库版本的时候，将会触发一个 onupgradeneeded 事件，并在事件中传入 IDBVersionChangeEvent，我们可以通过 event.target.result 来获取到 IDBDatabase 对象，然后通过这个对象来进行数据库的版本升级操作。如下所示：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// This event is only implemented in recent browsers</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onupgradeneeded</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Save the IDBDatabase interface</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> db </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Create an objectStore for this database</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">createObjectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {keyPath</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">myKey</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>注意，这里的版本号是一个整数。如果你传入一个 float，那么将会对该 float 进行取整操作。</p><p>有了 request,我们可以通过监听 onerror 或者 onsuccess 事件来进行相应的处理。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> db;</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> indexedDB.</span><span style="color:#62E884;">open</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">MyTestDatabase</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Why didn&#39;t you allow my web app to use IndexedDB?!</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  db </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>拿到 db 对象之后，我们可以设置全局的异常处理：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F6F6F4;">db.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Generic error handler for all errors targeted at this database&#39;s</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// requests!</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">error</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Database error: </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> event.target.errorCode);</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>IndexedDB 中的 table 叫做 object stores，和关系型数据库中的 table 一样，object stores 中的每一个对象都和一个 key 相关联，和 key 相关的有两个概念 key path 和 key generator.</p><p>如果存储的是 javascript Object 对象，那么可以指定该对象中的某一个属性作为 key path，那么这个属性将会被作为 key。</p><p>如果没有指定 key path，那么存储的 Object 可以是任何对象，甚至是基础类型比如数字和 String。</p><p>而 key generator 就是 key 的生成器。</p><p>假如我们想要存储这样的数据：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// This is what our customer data looks like.</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> customerData </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">  {ssn</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">444-44-4444</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Bill</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, age</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">35</span><span style="color:#F6F6F4;">, email</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bill@company.com</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">  {ssn</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">555-55-5555</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Donna</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, age</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">32</span><span style="color:#F6F6F4;">, email</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">donna@home.org</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>看一下对应的数据库操作是怎么样的：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> dbName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">the_name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> indexedDB.</span><span style="color:#62E884;">open</span><span style="color:#F6F6F4;">(dbName, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Handle errors.</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onupgradeneeded</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> db </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Create an objectStore to hold information about our customers. We&#39;re</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// going to use &quot;ssn&quot; as our key path because it&#39;s guaranteed to be</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// unique - or at least that&#39;s what I was told during the kickoff meeting.</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">createObjectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {keyPath</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ssn</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Create an index to search customers by name. We may have duplicates</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// so we can&#39;t use a unique index.</span></span>
<span class="line"><span style="color:#F6F6F4;">  objectStore.</span><span style="color:#62E884;">createIndex</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {unique</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Create an index to search customers by email. We want to ensure that</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// no two customers have the same email, so use a unique index.</span></span>
<span class="line"><span style="color:#F6F6F4;">  objectStore.</span><span style="color:#62E884;">createIndex</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">email</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">email</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {unique</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Use transaction oncomplete to make sure the objectStore creation is</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// finished before adding data into it.</span></span>
<span class="line"><span style="color:#F6F6F4;">  objectStore.transaction.</span><span style="color:#62E884;">oncomplete</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// Store values in the newly created objectStore.</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> customerObjectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">transaction</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">readwrite</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">objectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    customerData.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">customer</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      customerObjectStore.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(customer);</span></span>
<span class="line"><span style="color:#F6F6F4;">    });</span></span>
<span class="line"><span style="color:#F6F6F4;">  };</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>我们需要在 onupgradeneeded 事件中处理所有的 schema 相关的操作。</p><p>首先使用 db.createObjectStore 创建了一个 customers 的 ObjectStore，并且使用了对象的 keypath 作为 key。</p><p>除了 key 之外，我们创建了两个 index，以提高查询速度。</p><p>最后我们监听 transaction.oncomplete 事件，并在里面加入存储 object 的操作。</p><p>上面的代码中，我们使用了 keyPath 作为 key。</p><p>下面是一个使用 key Generator 的例子：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">createObjectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">names</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {autoIncrement</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="indexdb-中的-curd" tabindex="-1">indexdb 中的 CURD <a class="header-anchor" href="#indexdb-中的-curd" aria-label="Permalink to &quot;indexdb 中的 CURD&quot;">​</a></h2><p>indexedDB 的所有操作都需要在事务中，我们看一个开启事务的操作：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> transaction </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">transaction</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">], </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">readwrite</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>上面的例子中使用 readwrite 来操作 customers ObjectStore。</p><p>transaction 接收两个参数，第一个参数是一个数组，数组中是这个 trans 中将会处理的 ObjectStores，第二个参数是处理的模式。</p><p>有了 transaction 之后，我们可以监听事务的 complete 和 error 操作，然后就可以进行 add 操作了：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// Do something when all the data is added to the database.</span></span>
<span class="line"><span style="color:#F6F6F4;">transaction.</span><span style="color:#62E884;">oncomplete</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">All done!</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">transaction.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Don&#39;t forget to handle errors!</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> transaction.</span><span style="color:#62E884;">objectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">customerData.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">customer</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> objectStore.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(customer);</span></span>
<span class="line"><span style="color:#F6F6F4;">  request.</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// event.target.result === customer.ssn;</span></span>
<span class="line"><span style="color:#F6F6F4;">  };</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>上面的例子中，我们使用了 add 方法，add 的前提是数据库中并不存在相同 key 的对象。除了 add 方法之外，我们还可以使用 put 方法，put 方法主要用来进行更新操作。</p><p>再看一个删除的操作：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">transaction</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">], </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">readwrite</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">objectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">delete</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">444-44-4444</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// It&#39;s gone!</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>现在我们的数据库已经有了数据，我们看下怎么进行查询：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> transaction </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">transaction</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> transaction.</span><span style="color:#62E884;">objectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> objectStore.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">444-44-4444</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Handle errors!</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Do something with the request.result!</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Name for SSN 444-44-4444 is </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> request.result.name);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这里，我们直接使用了 db.transaction，默认情况下是 readonly 模式的。</p><p>下面是一个更新的例子：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">transaction</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">], </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">readwrite</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">objectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> objectStore.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">444-44-4444</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Handle errors!</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#F6F6F4;">request.</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Get the old value that we want to update</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> data </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// update the value(s) in the object that you want to change</span></span>
<span class="line"><span style="color:#F6F6F4;">  data.age </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">42</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// Put this updated object back into the database.</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> requestUpdate </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> objectStore.</span><span style="color:#62E884;">put</span><span style="color:#F6F6F4;">(data);</span></span>
<span class="line"><span style="color:#F6F6F4;">  requestUpdate.</span><span style="color:#62E884;">onerror</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// Do something with the error</span></span>
<span class="line"><span style="color:#F6F6F4;">  };</span></span>
<span class="line"><span style="color:#F6F6F4;">  requestUpdate.</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// Success - the data is updated!</span></span>
<span class="line"><span style="color:#F6F6F4;">  };</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>更新我们使用的是 put 方法。</p><h2 id="使用游标-cursor" tabindex="-1">使用游标 cursor <a class="header-anchor" href="#使用游标-cursor" aria-label="Permalink to &quot;使用游标 cursor&quot;">​</a></h2><p>indexedDB 支持游标操作，我们可以使用 cursor 来遍历 objectStore 的数据：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> objectStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> db.</span><span style="color:#62E884;">transaction</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">objectStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">customers</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">objectStore.</span><span style="color:#62E884;">openCursor</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> cursor </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cursor) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Name for SSN </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.key </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> is </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.value.name);</span></span>
<span class="line"><span style="color:#F6F6F4;">    cursor.</span><span style="color:#62E884;">continue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  } </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">No more entries!</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>openCursor 可以接受多个参数，第一个参数可以接受 key 的查询范围，第二个参数用来指定遍历的方向。如果两个参数都为空的话，默认是所有的数据的以升序的顺序遍历。</p><p>如果想遍历下一个游标，则可以调用 cursor.continue。</p><p>我们看一下两个参数的游标使用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// Only match &quot;Donna&quot;</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> singleKeyRange </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> IDBKeyRange.</span><span style="color:#62E884;">only</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Donna</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// Match anything past &quot;Bill&quot;, including &quot;Bill&quot;</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> lowerBoundKeyRange </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> IDBKeyRange.</span><span style="color:#62E884;">lowerBound</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Bill</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// Match anything past &quot;Bill&quot;, but don&#39;t include &quot;Bill&quot;</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> lowerBoundOpenKeyRange </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> IDBKeyRange.</span><span style="color:#62E884;">lowerBound</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Bill</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// Match anything up to, but not including, &quot;Donna&quot;</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> upperBoundOpenKeyRange </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> IDBKeyRange.</span><span style="color:#62E884;">upperBound</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Donna</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// Match anything between &quot;Bill&quot; and &quot;Donna&quot;, but not including &quot;Donna&quot;</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> boundKeyRange </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> IDBKeyRange.</span><span style="color:#62E884;">bound</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Bill</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Donna</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// To use one of the key ranges, pass it in as the first argument of openCursor()/openKeyCursor()</span></span>
<span class="line"><span style="color:#F6F6F4;">index.</span><span style="color:#62E884;">openCursor</span><span style="color:#F6F6F4;">(boundKeyRange, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">prev</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> cursor </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cursor) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// Do something with the matches.</span></span>
<span class="line"><span style="color:#F6F6F4;">    cursor.</span><span style="color:#62E884;">continue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>除了 openCursor，我们还可以通过使用 openKeyCursor 来遍历 KeyCursor：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#7B7F8B;">// Using a normal cursor to grab whole customer record objects</span></span>
<span class="line"><span style="color:#F6F6F4;">index.</span><span style="color:#62E884;">openCursor</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> cursor </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cursor) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// cursor.key is a name, like &quot;Bill&quot;, and cursor.value is the whole object.</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Name: </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.key </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">, SSN: </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.value.ssn </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">, email: </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.value.email);</span></span>
<span class="line"><span style="color:#F6F6F4;">    cursor.</span><span style="color:#62E884;">continue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// Using a key cursor to grab customer record object keys</span></span>
<span class="line"><span style="color:#F6F6F4;">index.</span><span style="color:#62E884;">openKeyCursor</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> cursor </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> event.target.result;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cursor) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// cursor.key is a name, like &quot;Bill&quot;, and cursor.value is the SSN.</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// No way to directly get the rest of the stored object.</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Name: </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.key </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">, SSN: </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> cursor.primaryKey);</span></span>
<span class="line"><span style="color:#F6F6F4;">    cursor.</span><span style="color:#62E884;">continue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>除此之外，我们还可以直接通过 index 来进行查询：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> index </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> objectStore.</span><span style="color:#62E884;">index</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">index.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Donna</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">onsuccess</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Donna&#39;s SSN is </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> event.target.result.ssn);</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>要使用 index 的前提就是需要在 request.onupgradeneeded 中创建 index。</p><blockquote><p>本文作者：flydean 程序那些事</p><p>本文链接：<a href="http://www.flydean.com/indexeddb-kickoff/" target="_blank" rel="noreferrer">http://www.flydean.com/indexeddb-kickoff/</a></p><p>本文来源：flydean 的博客</p><p>欢迎关注我的公众号:「程序那些事」最通俗的解读，最深刻的干货，最简洁的教程，众多你不知道的小技巧等你来发现！</p></blockquote>`,79),o=[e];function r(t,c,F,y,i,u){return a(),n("div",null,o)}const E=s(p,[["render",r]]);export{b as __pageData,E as default};
